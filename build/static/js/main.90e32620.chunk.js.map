{"version":3,"sources":["Editable.js","data/editables-initial-data.js","App.js","hooks/userLocalStorageState.js","index.js"],"names":["Editable","editable","content","quillEditorContainer","onChangeActive","isActive","contentEl","useRef","quillEditorParent","useEffect","current","innerHTML","appendChild","style","display","onKeyUp","event","code","activate","document","addEventListener","removeEventListener","active","className","id","position","flexGrow","flexBasis","width","onDoubleClick","top","bottom","left","right","ref","padding","App","quillEditorContainerTempHolder","quillToolbarContainer","quillInstance","key","defaultValue","serialize","JSON","stringify","deserialize","parse","React","useState","valueInLocalStorage","window","localStorage","getItem","state","setState","prevKeyRef","prevKey","removeItem","setItem","useLocalStorageState","editablesInitialData","editables","setEditables","editablesList","Object","keys","map","activeEditable","setActiveEditable","Quill","register","Emoji","theme","modules","toolbar","quill","onTextChange","container","firstChild","on","off","setEditableActive","delta","clipboard","convert","setContents","setTimeout","setSelection","index","length","getLength","undefined","height","flexDirection","overflow","value","flex","rootElement","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.90e32620.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nconst Editable = ({ editable, content, quillEditorContainer, onChangeActive, isActive }) => {\n\t// The element that will displat my editable's content when the editor is not active\n    const contentEl = useRef();\n    // The element that will contain the quill editor element when I'm the active Editable\n    const quillEditorParent = useRef();\n\n    // Set the contents of my contentEl when it changes\n    useEffect(() => {\n        contentEl.current.innerHTML = content;\n    }, [content]);\n\n\t/**\n\t * When prop isActive is true, detach the quill editor element\n\t * from the temporary container of App, moving it to my own container for it.\n\t *\n\t * Also, toggle the visibility of contentEl and quillEditorParent depending\n\t * on if I'm active or not.\n\t */\n\tuseEffect(() => {\n        if (isActive)\n\t\t\tquillEditorParent.current.appendChild(quillEditorContainer.current);\n\n\t\tquillEditorParent.current.style.display = isActive ? \"block\" : \"none\";\n\t\tcontentEl.current.style.display = isActive ? \"none\" : \"block\";\n    }, [quillEditorParent, quillEditorContainer, isActive]);\n\n\t/**\n\t * If I'm the active Editable, listen for user hitting the escape button\n\t * and deactivate me.\n\t */\n    useEffect(() => {\n    \tif (isActive) {\n    \t\tconst onKeyUp = (event) => {\n    \t\t\tif (event.code === 'Escape') {\n\t\t\t\t\tactivate(false);\n\t\t\t\t}\n\t\t\t};\n\n    \t\tdocument.addEventListener('keyup', onKeyUp);\n    \t\treturn () => document.removeEventListener('keyup', onKeyUp);\n\t\t}\n\t}, [isActive]);\n\n\t/**\n\t * Message App that I want to be the active editable.\n\t */\n    const activate = (active) => {\n        onChangeActive(editable, active);\n    };\n\n    return (\n        <div\n            className=\"editable\"\n            id={editable.id}\n            style={{\n                position: \"relative\",\n                flexGrow: 1,\n\t\t\t\tflexBasis: 0,\n                width: 0\n            }}\n            onDoubleClick={() => activate(true)} // Using double click to activate editing as user can click on the element for other puposes\n        >\n            <div\n                style={{\n                    position: \"absolute\",\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    display: \"none\"\n                }}\n                ref={quillEditorParent}\n            ></div>\n            <div\n                style={{\n                    position: \"absolute\",\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    padding: \"2rem\"\n                }}\n                ref={contentEl}\n            ></div>\n        </div>\n    );\n};\n\nexport default Editable;\n","/**\n * Initial data for the editables.\n */\n\nexport default {\n\t\"editable-1\": {\n\t\tid: \"editable-1\",\n\t\tcontent: `\n\t\t\t<h1>Editable 1 Header</h1>\n\t\t\t<p><br></p>\n\t\t\t<p>\n\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n\t\t\tut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\n\t\t\tex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat\n\t\t\tnulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\n\t\t\test laborum.\n\t\t\t</p>\n\t\t\t<p><br></p>\n\t\t\t<h2>Editable 1 Sub Header</h2>\n\t\t\t<p><br></p>\n\t\t\t<p>\n\t\t\tSed ut perspiciatis unde omnis iste natus error sit\n\t\t\tvoluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et\n\t\t\tquasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit\n\t\t\taut fugit, sed quia consequuntur magni.\n\t\t\t</p>\n\t\t`\n\t},\n\t\"editable-2\": {\n\t\tid: \"editable-2\",\n\t\tcontent: `\n\t\t\t<h1>Editable 2 Header</h1>\n\t\t\t<p><br></p>\n\t\t\t<p>\n\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n\t\t\tut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\n\t\t\tex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat\n\t\t\tnulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\n\t\t\test laborum.\n\t\t\t</p>\n\t\t\t<p><br></p>\n\t\t\t<h2>Editable 2 Sub Header</h2>\n\t\t\t<p><br></p>\n\t\t\t<p>\n\t\t\tSed ut perspiciatis unde omnis iste natus error sit\n\t\t\tvoluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et\n\t\t\tquasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit\n\t\t\taut fugit, sed quia consequuntur magni.\n\t\t\t</p>\n\t\t`\n\t},\n\t\"editable-3\": {\n\t\tid: \"editable-3\",\n\t\tcontent: `\n\t\t\t<h1>Editable 3 Header</h1>\n\t\t\t<p><br></p>\n\t\t\t<p>\n\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n\t\t\tut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\n\t\t\tex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat\n\t\t\tnulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\n\t\t\test laborum.\n\t\t\t</p>\n\t\t\t<p><br></p>\n\t\t\t<h2>Editable 3 Sub Header</h2>\n\t\t\t<p><br></p>\n\t\t\t<p>\n\t\t\tSed ut perspiciatis unde omnis iste natus error sit\n\t\t\tvoluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et\n\t\t\tquasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit\n\t\t\taut fugit, sed quia consequuntur magni.\n\t\t\t</p>\n\t\t`\n\t},\n\t\"editable-4\": {\n\t\tid: \"editable-4\",\n\t\tcontent: `\n\t\t\t<h1>Editable 4 Header</h1>\n\t\t\t<p><br></p>\n\t\t\t<p>\n\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n\t\t\tut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\n\t\t\tex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat\n\t\t\tnulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\n\t\t\test laborum.\n\t\t\t</p>\n\t\t\t<p><br></p>\n\t\t\t<h2>Editable 4 Sub Header</h2>\n\t\t\t<p><br></p>\n\t\t\t<p>\n\t\t\tSed ut perspiciatis unde omnis iste natus error sit\n\t\t\tvoluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et\n\t\t\tquasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit\n\t\t\taut fugit, sed quia consequuntur magni.\n\t\t\t</p>\n\t\t`\n\t},\n\t\"editable-5\": {\n\t\tid: \"editable-5\",\n\t\tcontent: `\n\t\t\t<h1>Editable 5 Header</h1>\n\t\t\t<p><br></p>\n\t\t\t<p>\n\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n\t\t\tut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\n\t\t\tex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat\n\t\t\tnulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\n\t\t\test laborum.\n\t\t\t</p>\n\t\t\t<p><br></p>\n\t\t\t<h2>Editable 5 Sub Header</h2>\n\t\t\t<p><br></p>\n\t\t\t<p>\n\t\t\tSed ut perspiciatis unde omnis iste natus error sit\n\t\t\tvoluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et\n\t\t\tquasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit\n\t\t\taut fugit, sed quia consequuntur magni.\n\t\t\t</p>\n\t\t`\n\t}\n}\n","import \"./App.css\";\n// Import CSS file of quill emoji module\nimport \"quill-emoji/dist/quill-emoji.css\";\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Quill from \"quill\";\nimport * as Emoji from \"quill-emoji\";\nimport Editable from \"./Editable\";\nimport editablesInitialData from \"./data/editables-initial-data\";\nimport { useLocalStorageState } from \"./hooks/userLocalStorageState\";\n\nconst App = () => {\n    // The div containing the quill editor when no instance of Editable is using it.\n    const quillEditorContainerTempHolder = useRef();\n    // The div that contains the quill toolbar.\n    const quillToolbarContainer = useRef();\n    // The quill editor\n    const quillEditorContainer = useRef();\n    // The quill instance\n    const quillInstance = useRef();\n    // The data for each Editable, that is also persisted in local storage\n    const [editables, setEditables] = useLocalStorageState(\n        \"quill-edit-multiple:editables\",\n        editablesInitialData\n    );\n    // Derive a list of editables from the editables object\n    const editablesList = Object.keys(editables).map((key) => editables[key]);\n    // The currently active editable, the one we're manipulating with quill\n    const [activeEditable, setActiveEditable] = useState();\n\n    /**\n     * Instansiate the quill editor, using the quillEditorContainer as\n     * the element for it. Also, use our own toolbar.\n     */\n    useEffect(() => {\n        // Regstering modules to Quill\n        Quill.register(\"modules/emoji\", Emoji);\n\n        // Store the quill instance for future use\n        quillInstance.current = new Quill(quillEditorContainer.current, {\n            theme: \"snow\",\n            modules: {\n                toolbar: quillToolbarContainer.current,\n                \"emoji-toolbar\": true,\n                \"emoji-textarea\": true,\n                \"emoji-shortname\": true,\n            }\n        });\n    }, []);\n\n    /**\n     * Add event listeners to quill to update the active editable\n     * when we type into the quill editor.\n     */\n    useEffect(() => {\n        if (quillInstance.current && activeEditable) {\n            const quill = quillInstance.current;\n            const onTextChange = () => {\n                activeEditable.content = quill.container.firstChild.innerHTML;\n                setEditables({\n                    ...editables,\n                    [activeEditable.id]: activeEditable\n                });\n            };\n            quill.on(\"text-change\", onTextChange);\n            return () => quill.off(\"text-change\", onTextChange);\n        }\n    }, [quillInstance, activeEditable, editables, setEditables]);\n\n    /**\n     * An editable has told us it wants to activate/deactivate itself.\n     *\n     * On activate, update the contents of the quill editor to be the\n     * contents of the activated editable, then set the current active\n     * editable to the one making the request. Also, position the carret\n     * of the quill editor to the end of the content.\n     *\n     * On deactivation, set the active editable to undefined and move\n     * the quill editor DOM element back to the temp holder element.\n     */\n    const setEditableActive = (editable, activate) => {\n        if (activate) {\n            const quill = quillInstance.current;\n            const delta = quill.clipboard.convert(editable.content);\n            quill.setContents(delta, \"silent\");\n            setActiveEditable(editable);\n            setTimeout(() => {\n                quill.setSelection(\n                    { index: 0, length: quill.getLength() - 1 },\n                    \"api\"\n                );\n            });\n        } else {\n            quillEditorContainerTempHolder.current.appendChild(\n                quillEditorContainer.current\n            );\n            setActiveEditable(undefined);\n        }\n    };\n\n    return (\n        <div\n            className=\"App\"\n            style={{\n                position: \"relative\",\n                height: \"100vh\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                overflow: \"hidden\"\n            }}\n        >\n            {/* A wrapper div for the toolbar */}\n            <div className=\"ql-toolbar-container\">\n                {/* Define what formats we want in the toolbar */}\n                <div ref={quillToolbarContainer} className=\"ql-toolbar\">\n                    <span className=\"ql-formats\">\n                       <select className=\"ql-font\"></select>\n                       <select className=\"ql-size\"></select>\n                    </span>\n                    <div className=\"ql-formats\">\n                        <select className=\"ql-header\" defaultValue={false}>\n                            <option value=\"false\"></option>\n                            <option value=\"1\"></option>\n                            <option value=\"2\"></option>\n                            <option value=\"3\"></option>\n                        </select>\n                    </div>\n                    <span className=\"ql-formats\">\n                        <button className=\"ql-bold\"></button>\n                        <button className=\"ql-italic\"></button>\n                        <button className=\"ql-underline\"></button>\n                        <button className=\"ql-strike\"></button>\n                    </span>\n                    <span className=\"ql-formats\">\n                        <select className=\"ql-color\"></select>\n                        <select className=\"ql-background\"></select>\n                    </span>\n                    <span className=\"ql-formats\">\n                        <button className=\"ql-script\" value=\"sub\"></button>\n                        <button className=\"ql-script\" value=\"super\"></button>\n                    </span>\n                    <span className=\"ql-formats\">\n                        <button className=\"ql-blockquote\"></button>\n                        <button className=\"ql-code-block\"></button>\n                    </span>\n                    <span className=\"ql-formats\">\n                        <button className=\"ql-list\" value=\"ordered\"></button>\n                        <button className=\"ql-list\" value=\"bullet\"></button>\n                        <button className=\"ql-indent\" value=\"-1\"></button>\n                        <button className=\"ql-indent\" value=\"+1\"></button>\n                    </span>\n                    <span className=\"ql-formats\">\n                        <button className=\"ql-direction\" value=\"rtl\"></button>\n                        <select className=\"ql-align\"></select>\n                    </span>\n                    <span className=\"ql-formats\">\n                        <button className=\"ql-link\"></button>\n                        <button className=\"ql-image\"></button>\n                        <button className=\"ql-video\"></button>\n                        <button className=\"ql-formula\"></button>\n                    </span>\n                    <span className=\"ql-formats\">\n                        <button className=\"ql-clean\"></button>\n                    </span>\n                    <span className=\"ql-formats\">\n                       <button className=\"ql-emoji\"></button>\n                    </span>\n                </div>\n            </div>\n\n            <div\n                className=\"editables-container\"\n                style={{ flex: \"1 1 auto\", display: \"flex\" }}\n            >\n                {editablesList.map((editable) => (\n                    <Editable\n                        content = {editable.content}\n                        editable = {editable}\n                        key = {editable.id}\n                        isActive = {activeEditable === editable}\n                        onChangeActive = {setEditableActive}\n                        quillEditorContainer = {quillEditorContainer}\n                    />\n                ))}\n            </div>\n\n            {/* An temporary container for the quill editor element\n\t\t\t\t that will hold the element if no Editable is activated */}\n            <div\n                style={{ position: \"fixed\", left: \"100vw\", top: 0 }}\n                ref={quillEditorContainerTempHolder}\n            >\n                <div\n                    ref={quillEditorContainer}\n                    style={{\n                        position: \"absolute\",\n                        top: 0,\n                        bottom: 0,\n                        left: 0,\n                        right: 0\n                    }}\n                ></div>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\n\n/**\n *\n * @param {String} key The key to set in localStorage for this value\n * @param {Object} defaultValue The value to use if it is not already in localStorage\n * @param {{serialize: Function, deserialize: Function}} options The serialize and deserialize functions to use (defaults to JSON.stringify and JSON.parse respectively)\n */\n\nfunction useLocalStorageState(\n    key,\n    defaultValue = \"\",\n    { serialize = JSON.stringify, deserialize = JSON.parse } = {}\n) {\n    const [state, setState] = React.useState(() => {\n        const valueInLocalStorage = window.localStorage.getItem(key);\n        if (valueInLocalStorage) {\n            return deserialize(valueInLocalStorage);\n        }\n        return typeof defaultValue === \"function\"\n            ? defaultValue()\n            : defaultValue;\n    });\n\n    const prevKeyRef = React.useRef(key);\n\n    React.useEffect(() => {\n        const prevKey = prevKeyRef.current;\n        if (prevKey !== key) {\n            window.localStorage.removeItem(prevKey);\n        }\n        prevKeyRef.current = key;\n        window.localStorage.setItem(key, serialize(state));\n    }, [key, state, serialize]);\n\n    return [state, setState];\n}\n\nexport { useLocalStorageState };\n","import \"@atlaskit/css-reset\";\nimport \"quill/dist/quill.snow.css\";\nimport \"./index.css\"\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    rootElement\n);\n"],"sourceRoot":""}